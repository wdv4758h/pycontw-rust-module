# Based on the "trust" template v0.1.1
# https://github.com/japaric/trust/tree/v0.1.1

dist: trusty
language: rust
services: docker
sudo: required

# TODO Rust builds on stable by default, this can be
# overridden on a case by case basis down below.

env:
  global:
    # TODO Update this to match the name of your project.
    - CRATE_NAME=pycontw

matrix:
  # TODO These are all the build jobs. Adjust as necessary. Comment out what you
  # don't need
  include:
    # Linux
    # - env: TARGET=i686-unknown-linux-gnu
    # - env: TARGET=i686-unknown-linux-musl
    # - env: TARGET=x86_64-unknown-linux-gnu
    #   rust: nightly
    - env: TARGET=x86_64-unknown-linux-musl
      rust: nightly

    # OSX
    # - env: TARGET=i686-apple-darwin
    #   os: osx
    - env: TARGET=x86_64-apple-darwin
      os: osx
      rust: nightly

    # *BSD
    # - env: TARGET=i686-unknown-freebsd DISABLE_TESTS=1
    # - env: TARGET=x86_64-unknown-freebsd DISABLE_TESTS=1
    # - env: TARGET=x86_64-unknown-netbsd DISABLE_TESTS=1

    # Other architectures
    # - env: TARGET=aarch64-unknown-linux-gnu
    # - env: TARGET=armv7-unknown-linux-gnueabihf
    # - env: TARGET=mips-unknown-linux-gnu
    # - env: TARGET=mips64-unknown-linux-gnuabi64
    # - env: TARGET=mips64el-unknown-linux-gnuabi64
    # - env: TARGET=mipsel-unknown-linux-gnu
    # - env: TARGET=powerpc-unknown-linux-gnu
    # - env: TARGET=powerpc64-unknown-linux-gnu
    # - env: TARGET=powerpc64le-unknown-linux-gnu
    # - env: TARGET=s390x-unknown-linux-gnu DISABLE_TESTS=1

    # Testing other channels
    # - env: TARGET=x86_64-unknown-linux-gnu
    #   rust: nightly
    # - env: TARGET=x86_64-apple-darwin
    #   os: osx
    #   rust: nightly

before_install: set -e

install:
  - sh ci/install.sh
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

after_script: set +e

before_deploy:
  - sh ci/before_deploy.sh

deploy:
  # TODO update `api_key.secure`
  # - Create a `public_repo` GitHub token. Go to: https://github.com/settings/tokens/new
  # - Encrypt it: `travis encrypt 0123456789012345678901234567890123456789
  # - Paste the output down here
  api_key:
    secure: "f2gGDO5mvGJGK0dTC79fYOYh03pkCGCESXrvUU9qOTB4B2VOBO+WpdbCPHrjSNNmjO4j+sYKpoNevxsfOeUMFD3qXHlfq5Kp+/8tCtAHfwV7/Eo9963R6+7ejFDlxSB38f1S+NipJLPml6vaMx2Qou2KnsUflzTNC9WrtRIaKaAo17N+5Aq4cZ+6r12gerESM/VQAksqmAEI8P3U07UDKJh2AXAG9eZ5fcM2fdxU4AFz0SAjODaNFxIeCDamMWYWG24LzwMKd7aWZUeoEWzkYuepUIe+z4x6k2fYIH8kkgCWMB4Vlu0tElBPOj3+ACQyNhIUg28RVqV7/8JjVKVNMXHsauZtViTd19hAJ0kbpUq8qHY3FzzGEyODxrWE193t+GfeDEjVbsZ4g9yqJMpi4sTIYOOpZr7OjkPTttTVeZ/0E7F8MMxvnH8uuXGyoaqkS3C7CzcSKIXSxrJ5bE2v+by9b4dwi6mXkw1TR1Gm41q0Q6bf0JTnLYVfQRC+VKsmP0R9T17o6QVa2VnZO3Sfal52pR6QQ98+AxPfnba6otfOAsvLEl08N25TPLl5tny+6KkpfMVTQBMo8VRI0hTZjmEfPA/LrleAdJO/aEMLzw8etTE7miQ94EvqzfANYNcKN1LlwvD6R7ZB1GcwopaNIIMfhxRY+hweeBMN2Z3NBOQ="
  file_glob: true
  file:
    - dist/*
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    condition: $TRAVIS_RUST_VERSION = nightly
    tags: true
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master

notifications:
  email:
    on_success: never
